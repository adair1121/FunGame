{"version":3,"sources":["assets/Script/Scene/stamp.js"],"names":["global","require","cc","Class","Component","properties","yin","type","Node","map","block","Prefab","prop","num","Label","onLoad","game","bonus","manager","director","getCollisionManager","enabled","schedule","argument","setBLock","ori_v","ori_a","v","a","zIndex","node","on","event","gameover","yin_move","action","sequence","moveTo","runAction","rand","Math","floor","seededRandom","length","instantiate","setPosition","parent","setProp","seed","setNum","string","update","dt"],"mappings":"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","sourceRoot":"/","sourcesContent":["var global = require(\"global\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        yin: {\n            default: null,\n            type: cc.Node\n        },\n        map: {\n            default: null,\n            type: cc.Node\n        },\n        block: {\n            default: [],\n            type: cc.Prefab\n        },\n        prop: {\n            default: [],\n            type: cc.Prefab\n        },\n        num: {\n            default: null,\n            type: cc.Label\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n        global.game = this;\n        global.num = 0;\n        global.bonus = 0;\n\n        var manager = cc.director.getCollisionManager();\n        manager.enabled = true;\n        // manager.enabledDebugDraw = true;\n        // manager.enabledDrawBoundingBox = true;\n        this.schedule(function(argument) {\n            this.setBLock();\n            // this.setProp();\n        }, 1, this);\n\n        this.yin.ori_v = 1;\n        this.yin.ori_a = 0.2;\n        this.yin.v = this.yin.ori_v;\n        this.yin.a = this.yin.ori_a;\n        this.yin.zIndex = 9;\n        this.node.on('touchstart', function ( event ) {\n\n            if(!global.gameover) {\n                this.yin.v = this.yin.ori_v;\n                this.yin.a = this.yin.ori_a;\n                this.yin_move = true;\n            }\n\n            var action = cc.sequence(\n                cc.moveTo(0.1, 0, 100),\n                cc.moveTo(0.1, 0, -200),\n            );\n            this.yin.runAction(action);\n            // console.log(event.getLocation())\n            // this.yin.setPosition(event.getLocation())\n        }, this);\n\n\n        this.node.on('touchend', function ( event ) {\n            this.yin_move = false;\n        }, this);\n\n    },\n\n    setBLock: function() {\n        var rand = Math.floor(Math.seededRandom() * this.block.length);\n        var block = cc.instantiate(this.block[rand]);\n\n        // console.log(Math.max(0, (100 - global.num) / 100) );\n        block.setPosition(500, 100);\n        // block.scaleX = Math.min(1, Math.max(0, (200 - global.num) / 200)) + Math.seededRandom() * 0.2 + 0.2;\n        // block.scaleY = block.scaleX;\n\n        block.parent = this.map;\n\n        var action = cc.moveTo(4, -500, 100);\n        block.runAction(action);\n    },\n\n    setProp: function() {\n        var rand = Math.floor(Math.seededRandom() * this.prop.length);\n        var prop = cc.instantiate(this.prop[rand]);\n\n        prop.setPosition(500, 0);\n        prop.seed = Math.seededRandom();\n\n        prop.parent = this.map;\n\n        var action = cc.moveTo(4, -500, 0);\n        prop.runAction(action);\n    },\n\n    setNum: function(num) {\n        global.num += num + global.bonus;\n        this.num.string = global.num;\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n\n        /*if(this.yin_move) {\n            this.yin.y += this.yin.v;\n            this.yin.v += this.yin.a;\n        }*/\n    },\n});\n"]}