
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Scene/menu.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1e8bc7L8zNO7ZAe6MvxRyWA', 'menu');
// Script/Scene/menu.js

"use strict";

var global = require("global");

cc.Class({
  "extends": cc.Component,
  properties: {
    btn_start: {
      "default": null,
      type: cc.Node
    },
    btn_leitai: {
      "default": null,
      type: cc.Node
    },
    btn_tanke: {
      "default": null,
      type: cc.Node
    },
    btn_xian: {
      "default": null,
      type: cc.Node
    },
    btn_menu: {
      "default": null,
      type: cc.Node
    },
    btn_share: {
      "default": null,
      type: cc.Node
    },
    btn_rank: {
      "default": null,
      type: cc.Node
    },
    btn_info: {
      "default": null,
      type: cc.Node
    },
    panel: {
      "default": null,
      type: cc.Node
    },
    panel_close: {
      "default": null,
      type: cc.Node
    },
    panel_cont: {
      "default": null,
      type: cc.Node
    },
    cont_menu: {
      "default": null,
      type: cc.Node
    },
    menu_c1: {
      "default": null,
      type: cc.Node
    },
    cont_info: {
      "default": null,
      type: cc.Node
    },
    info_msg: {
      "default": null,
      type: cc.Label
    }
  },
  // use this for initialization
  onLoad: function onLoad() {
    if (typeof wx != "undefined") {
      var info = wx.getSystemInfoSync();
      this.bannerAd = wx.createBannerAd({
        adUnitId: 'adunit-xxxx',
        style: {
          left: 0,
          top: info.windowHeight - 110,
          width: info.windowWidth,
          height: 110
        }
      });
      var self = this;
      wx.showShareMenu({
        withShareTicket: true
      });
      wx.updateShareMenu({
        withShareTicket: true
      });
      wx.onShareAppMessage(function () {
        // 用户点击了“转发”按钮
        return {
          title: '来啊，互相伤害啊',
          imageUrl: "res/raw-assets/Texture/share/s1.png",
          success: function success(res) {}
        };
      });
      wx.login({
        success: function success(loginCode) {
          wx.getUserInfo({
            lang: 'zh_CN',
            success: function success(res) {
              self.data = {
                'type': 'user',
                'name': res.userInfo.nickName,
                'ava': res.userInfo.avatarUrl,
                'sex': res.userInfo.gender,
                'loginCode': loginCode.code
              };
              wx.request({
                url: 'https://url/',
                method: 'POST',
                data: self.data,
                //参数为键值对字符串
                header: {
                  //设置参数内容类型为x-www-form-urlencoded
                  'Content-Type': 'application/x-www-form-urlencoded',
                  'Accept': 'application/json'
                },
                success: function success(res) {},
                fail: function fail(res) {// console.log('f',res)
                }
              });
            },
            fail: function fail(res) {
              // iOS 和 Android 对于拒绝授权的回调 errMsg 没有统一，需要做一下兼容处理
              if (res.errMsg.indexOf('auth deny') > -1 || res.errMsg.indexOf('auth denied') > -1) {
                // 处理用户拒绝授权的情况
                wx.showModal({
                  title: '小卜:',
                  content: '登录后才可以在排行榜看到你的分数哦',
                  success: function success(res) {
                    if (res.confirm) {
                      wx.openSetting({
                        success: function success(res) {
                          wx.getUserInfo({
                            lang: 'zh_CN',
                            success: function success(res) {
                              self.data = {
                                'type': 'user',
                                'name': res.userInfo.nickName,
                                'ava': res.userInfo.avatarUrl,
                                'sex': res.userInfo.gender,
                                'loginCode': loginCode.code
                              };
                              wx.request({
                                url: 'https://url/',
                                method: 'POST',
                                data: self.data,
                                //参数为键值对字符串
                                header: {
                                  //设置参数内容类型为x-www-form-urlencoded
                                  'Content-Type': 'application/x-www-form-urlencoded',
                                  'Accept': 'application/json'
                                },
                                success: function success(res) {},
                                fail: function fail(res) {// console.log('f',res)
                                }
                              });
                            }
                          });
                        }
                      });
                    }
                  },
                  fail: function fail(argument) {}
                });
              }
            }
          });
        },
        fail: function fail(res) {
          console.log("fail", res);
        }
      });
    }

    this.btn_start.on('touchend', function (event) {
      this.bannerAd.hide();
      cc.director.loadScene('Boo');
    }, this);
    this.btn_leitai.on('touchend', function (event) {
      this.bannerAd.hide();
      cc.director.loadScene('Leitai');
      /*wx.showModal({
          title: '小卜:',
          content: '正在制作中，今天没赶上QAQ',
          success: function (res) {
           },
          fail: function (argument) {
           }
      });*/
    }, this);
    this.menu_c1.on('touchstart', function (event) {
      cc.director.loadScene('C1');
    }, this);
    this.btn_menu.on('touchstart', function (event) {
      this.panel.active = true;
      this.panel_cont.children[0].active = true;
    }, this);
    this.panel_close.on('touchstart', function (event) {
      this.panel.active = false;
      this.panel_cont.children[0].active = false;
      this.panel_cont.children[1].active = false;
    }, this);
    this.panel_cont.on('touchstart', function (event) {
      return false;
    }, this);

    if (typeof wx != "undefined") {
      this.btn_info.on('touchstart', function (event) {
        this.panel.active = true;
        this.panel_cont.children[1].active = true;
        var self = this;
        self.data = {
          'type': 'notice'
        };
        wx.request({
          url: 'https://url/',
          method: 'POST',
          data: self.data,
          //参数为键值对字符串
          header: {
            //设置参数内容类型为x-www-form-urlencoded
            'Content-Type': 'application/x-www-form-urlencoded',
            'Accept': 'application/json'
          },
          success: function success(res) {
            self.info_msg.string = res.data[0].msg;
          },
          fail: function fail(res) {// console.log('f',res)
          }
        });
      }, this);
      this.btn_share.on('touchstart', function (event) {
        wx.shareAppMessage({
          title: '据说有神秘嘉宾，快来看看吧~',
          imageUrl: "res/raw-assets/Texture/share/dolo_share.png",
          success: function success(res) {
            wx.showToast({
              title: '恭喜你触发彩蛋：神秘嘉宾Dolo~',
              icon: 'success',
              duration: 2000
            });
            cc.director.loadScene('Dolo');
          }
        });
      }, this);
      var is_show = true;
      this.btn_tanke.on('touchstart', function (event) {
        if (is_show) {
          wx.showToast({
            title: '广告彩蛋……',
            icon: 'success',
            duration: 2000
          });
          this.bannerAd.show();
          is_show = false;
        } else {
          this.bannerAd.hide();
          is_show = true;
        }
      }, this);
      this.btn_xian.on('touchstart', function (event) {
        wx.previewImage({
          current: "http://url/get10.jpg",
          urls: ["http://url/get10.jpg", "http://url/xian.jpg", "http://url/tanke.jpg"]
        });
      }, this);

      if (wx.createGameClubButton) {
        var button = wx.createGameClubButton({
          icon: 'white',
          style: {
            left: 10,
            top: 12,
            width: 30,
            height: 30
          }
        });
      }
      /*if(wx.createUserInfoButton) {
          var button = wx.createUserInfoButton({
              type: 'text',
              text: '登录',
              style: {
                  left: 10,
                  top: 76,
                  width: 100,
                  height: 40,
                  lineHeight: 40,
                  backgroundColor: '#ffffff',
                  color: '#000000',
                  textAlign: 'center',
                  fontSize: 16,
                  borderRadius: 4
              }
          });
           button.onTap(function (res) {
              console.log("tap",res)
          });
      }*/

    }
  },
  // called every frame, uncomment this function to activate update callback
  update: function update(dt) {}
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvU2NlbmUvbWVudS5qcyJdLCJuYW1lcyI6WyJnbG9iYWwiLCJyZXF1aXJlIiwiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJidG5fc3RhcnQiLCJ0eXBlIiwiTm9kZSIsImJ0bl9sZWl0YWkiLCJidG5fdGFua2UiLCJidG5feGlhbiIsImJ0bl9tZW51IiwiYnRuX3NoYXJlIiwiYnRuX3JhbmsiLCJidG5faW5mbyIsInBhbmVsIiwicGFuZWxfY2xvc2UiLCJwYW5lbF9jb250IiwiY29udF9tZW51IiwibWVudV9jMSIsImNvbnRfaW5mbyIsImluZm9fbXNnIiwiTGFiZWwiLCJvbkxvYWQiLCJ3eCIsImluZm8iLCJnZXRTeXN0ZW1JbmZvU3luYyIsImJhbm5lckFkIiwiY3JlYXRlQmFubmVyQWQiLCJhZFVuaXRJZCIsInN0eWxlIiwibGVmdCIsInRvcCIsIndpbmRvd0hlaWdodCIsIndpZHRoIiwid2luZG93V2lkdGgiLCJoZWlnaHQiLCJzZWxmIiwic2hvd1NoYXJlTWVudSIsIndpdGhTaGFyZVRpY2tldCIsInVwZGF0ZVNoYXJlTWVudSIsIm9uU2hhcmVBcHBNZXNzYWdlIiwidGl0bGUiLCJpbWFnZVVybCIsInN1Y2Nlc3MiLCJyZXMiLCJsb2dpbiIsImxvZ2luQ29kZSIsImdldFVzZXJJbmZvIiwibGFuZyIsImRhdGEiLCJ1c2VySW5mbyIsIm5pY2tOYW1lIiwiYXZhdGFyVXJsIiwiZ2VuZGVyIiwiY29kZSIsInJlcXVlc3QiLCJ1cmwiLCJtZXRob2QiLCJoZWFkZXIiLCJmYWlsIiwiZXJyTXNnIiwiaW5kZXhPZiIsInNob3dNb2RhbCIsImNvbnRlbnQiLCJjb25maXJtIiwib3BlblNldHRpbmciLCJhcmd1bWVudCIsImNvbnNvbGUiLCJsb2ciLCJvbiIsImV2ZW50IiwiaGlkZSIsImRpcmVjdG9yIiwibG9hZFNjZW5lIiwiYWN0aXZlIiwiY2hpbGRyZW4iLCJzdHJpbmciLCJtc2ciLCJzaGFyZUFwcE1lc3NhZ2UiLCJzaG93VG9hc3QiLCJpY29uIiwiZHVyYXRpb24iLCJpc19zaG93Iiwic2hvdyIsInByZXZpZXdJbWFnZSIsImN1cnJlbnQiLCJ1cmxzIiwiY3JlYXRlR2FtZUNsdWJCdXR0b24iLCJidXR0b24iLCJ1cGRhdGUiLCJkdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUNBQyxFQUFFLENBQUNDLEtBQUgsQ0FBUztBQUNMLGFBQVNELEVBQUUsQ0FBQ0UsU0FEUDtBQUdMQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsU0FBUyxFQUFFO0FBQ1AsaUJBQVMsSUFERjtBQUVQQyxNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ007QUFGRixLQURIO0FBS1JDLElBQUFBLFVBQVUsRUFBRTtBQUNSLGlCQUFTLElBREQ7QUFFUkYsTUFBQUEsSUFBSSxFQUFFTCxFQUFFLENBQUNNO0FBRkQsS0FMSjtBQVNSRSxJQUFBQSxTQUFTLEVBQUU7QUFDUCxpQkFBUyxJQURGO0FBRVBILE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDTTtBQUZGLEtBVEg7QUFhUkcsSUFBQUEsUUFBUSxFQUFFO0FBQ04saUJBQVMsSUFESDtBQUVOSixNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ007QUFGSCxLQWJGO0FBbUJSSSxJQUFBQSxRQUFRLEVBQUU7QUFDTixpQkFBUyxJQURIO0FBRU5MLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDTTtBQUZILEtBbkJGO0FBdUJSSyxJQUFBQSxTQUFTLEVBQUU7QUFDUCxpQkFBUyxJQURGO0FBRVBOLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDTTtBQUZGLEtBdkJIO0FBMkJSTSxJQUFBQSxRQUFRLEVBQUU7QUFDTixpQkFBUyxJQURIO0FBRU5QLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDTTtBQUZILEtBM0JGO0FBK0JSTyxJQUFBQSxRQUFRLEVBQUU7QUFDTixpQkFBUyxJQURIO0FB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O0FBQ0hDLFlBQUFBLElBQUksRUFBRSxFQURIO0FBRUhDLFlBQUFBLEdBQUcsRUFBRSxFQUZGO0FBR0hFLFlBQUFBLEtBQUssRUFBRSxFQUhKO0FBSUhFLFlBQUFBLE1BQU0sRUFBRTtBQUpMO0FBRjBCLFNBQXhCLENBQWI7QUFTSDtBQUVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0JIO0FBRUosR0F0V0k7QUF3V0w7QUFDQXNELEVBQUFBLE1BQU0sRUFBRSxnQkFBVUMsRUFBVixFQUFjLENBRXJCO0FBM1dJLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnbG9iYWwgPSByZXF1aXJlKFwiZ2xvYmFsXCIpO1xuY2MuQ2xhc3Moe1xuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcblxuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgYnRuX3N0YXJ0OiB7XG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZVxuICAgICAgICB9LFxuICAgICAgICBidG5fbGVpdGFpOiB7XG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZVxuICAgICAgICB9LFxuICAgICAgICBidG5fdGFua2U6IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICB0eXBlOiBjYy5Ob2RlXG4gICAgICAgIH0sXG4gICAgICAgIGJ0bl94aWFuOiB7XG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZVxuICAgICAgICB9LFxuXG5cbiAgICAgICAgYnRuX21lbnU6IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICB0eXBlOiBjYy5Ob2RlXG4gICAgICAgIH0sXG4gICAgICAgIGJ0bl9zaGFyZToge1xuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcbiAgICAgICAgICAgIHR5cGU6IGNjLk5vZGVcbiAgICAgICAgfSxcbiAgICAgICAgYnRuX3Jhbms6IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICB0eXBlOiBjYy5Ob2RlXG4gICAgICAgIH0sXG4gICAgICAgIGJ0bl9pbmZvOiB7XG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZVxuICAgICAgICB9LFxuXG4gICAgICAgIHBhbmVsOiB7XG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZVxuICAgICAgICB9LFxuICAgICAgICBwYW5lbF9jbG9zZToge1xuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcbiAgICAgICAgICAgIHR5cGU6IGNjLk5vZGVcbiAgICAgICAgfSxcbiAgICAgICAgcGFuZWxfY29udDoge1xuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcbiAgICAgICAgICAgIHR5cGU6IGNjLk5vZGVcbiAgICAgICAgfSxcblxuICAgICAgICBjb250X21lbnU6IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICB0eXBlOiBjYy5Ob2RlXG4gICAgICAgIH0sXG4gICAgICAgIG1lbnVfYzE6IHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICB0eXBlOiBjYy5Ob2RlXG4gICAgICAgIH0sXG5cbiAgICAgICAgY29udF9pbmZvOiB7XG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxuICAgICAgICAgICAgdHlwZTogY2MuTm9kZVxuICAgICAgICB9LFxuICAgICAgICBpbmZvX21zZzoge1xuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcbiAgICAgICAgICAgIHR5cGU6IGNjLkxhYmVsXG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8gdXNlIHRoaXMgZm9yIGluaXRpYWxpemF0aW9uXG4gICAgb25Mb2FkOiBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgaWYodHlwZW9mKHd4KSAhPSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIFx0dmFyIGluZm8gPSB3eC5nZXRTeXN0ZW1JbmZvU3luYygpO1xuXHRcdFx0dGhpcy5iYW5uZXJBZCA9IHd4LmNyZWF0ZUJhbm5lckFkKHtcblx0XHRcdCAgICBhZFVuaXRJZDogJ2FkdW5pdC14eHh4Jyxcblx0XHRcdCAgICBzdHlsZToge1xuXHRcdFx0ICAgICAgICBsZWZ0OiAwLFxuXHRcdFx0ICAgICAgICB0b3A6IGluZm8ud2luZG93SGVpZ2h0IC0gMTEwLFxuXHRcdFx0ICAgICAgICB3aWR0aDogaW5mby53aW5kb3dXaWR0aCxcblx0XHRcdCAgICAgICAgaGVpZ2h0OiAxMTBcblx0XHRcdCAgICB9XG5cdFx0XHR9KTtcbiAgICAgICAgXG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICAgICAgICAgIHd4LnNob3dTaGFyZU1lbnUoe1xuICAgICAgICAgICAgICB3aXRoU2hhcmVUaWNrZXQ6IHRydWVcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB3eC51cGRhdGVTaGFyZU1lbnUoe1xuICAgICAgICAgICAgICB3aXRoU2hhcmVUaWNrZXQ6IHRydWVcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB3eC5vblNoYXJlQXBwTWVzc2FnZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIC8vIOeUqOaIt+eCueWHu+S6huKAnOi9rOWPkeKAneaMiemSrlxuICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHRpdGxlOiAn5p2l5ZWK77yM5LqS55u45Lyk5a6z5ZWKJyxcbiAgICAgICAgICAgICAgICBpbWFnZVVybDogXCJyZXMvcmF3LWFzc2V0cy9UZXh0dXJlL3NoYXJlL3MxLnBuZ1wiLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlcykge1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHd4LmxvZ2luKHtcbiAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGxvZ2luQ29kZSkge1xuICAgICAgICAgICAgICAgICAgICB3eC5nZXRVc2VySW5mbyh7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYW5nOiAnemhfQ04nLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5kYXRhID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAndHlwZSc6ICd1c2VyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnOiByZXMudXNlckluZm8ubmlja05hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdhdmEnOiByZXMudXNlckluZm8uYXZhdGFyVXJsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc2V4JzogcmVzLnVzZXJJbmZvLmdlbmRlcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xvZ2luQ29kZSc6IGxvZ2luQ29kZS5jb2RlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd3gucmVxdWVzdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogJ2h0dHBzOi8vdXJsLycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBzZWxmLmRhdGEsICAgIC8v5Y+C5pWw5Li66ZSu5YC85a+55a2X56ym5LiyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/orr7nva7lj4LmlbDlhoXlrrnnsbvlnovkuLp4LXd3dy1mb3JtLXVybGVuY29kZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOidhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnZicscmVzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAocmVzKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBpT1Mg5ZKMIEFuZHJvaWQg5a+55LqO5ouS57ud5o6I5p2D55qE5Zue6LCDIGVyck1zZyDmsqHmnInnu5/kuIDvvIzpnIDopoHlgZrkuIDkuIvlhbzlrrnlpITnkIZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmVyck1zZy5pbmRleE9mKCdhdXRoIGRlbnknKSA+IC0xIHx8IHJlcy5lcnJNc2cuaW5kZXhPZignYXV0aCBkZW5pZWQnKSA+IC0xICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5aSE55CG55So5oi35ouS57ud5o6I5p2D55qE5oOF5Ya1XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHd4LnNob3dNb2RhbCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+Wwj+WNnDonLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogJ+eZu+W9leWQjuaJjeWPr+S7peWcqOaOkuihjOamnOeci+WIsOS9oOeahOWIhuaVsOWTpicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXMuY29uZmlybSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3eC5vcGVuU2V0dGluZyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOmZ1bmN0aW9uKHJlcyl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd3guZ2V0VXNlckluZm8oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYW5nOiAnemhfQ04nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuZGF0YSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAndHlwZSc6ICd1c2VyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbmFtZSc6IHJlcy51c2VySW5mby5uaWNrTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYXZhJzogcmVzLnVzZXJJbmZvLmF2YXRhclVybCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc2V4JzogcmVzLnVzZXJJbmZvLmdlbmRlcixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbG9naW5Db2RlJzogbG9naW5Db2RlLmNvZGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd3gucmVxdWVzdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly91cmwvJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBzZWxmLmRhdGEsICAgIC8v5Y+C5pWw5Li66ZSu5YC85a+55a2X56ym5LiyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v6K6+572u5Y+C5pWw5YaF5a6557G75Z6L5Li6eC13d3ctZm9ybS11cmxlbmNvZGVkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOidhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnZicscmVzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiZmFpbFwiLHJlcylcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfVxuXG5cbiAgICAgICAgdGhpcy5idG5fc3RhcnQub24oJ3RvdWNoZW5kJywgZnVuY3Rpb24gKCBldmVudCApIHtcblx0XHRcdHRoaXMuYmFubmVyQWQuaGlkZSgpO1xuICAgICAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKCdCb28nKTtcbiAgICAgICAgfSwgdGhpcyk7XG5cbiAgICAgICAgdGhpcy5idG5fbGVpdGFpLm9uKCd0b3VjaGVuZCcsIGZ1bmN0aW9uICggZXZlbnQgKSB7XG5cdFx0XHR0aGlzLmJhbm5lckFkLmhpZGUoKTtcbiAgICAgICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZSgnTGVpdGFpJyk7XG5cbiAgICAgICAgICAgIC8qd3guc2hvd01vZGFsKHtcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+Wwj+WNnDonLFxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICfmraPlnKjliLbkvZzkuK3vvIzku4rlpKnmsqHotbbkuIpRQVEnLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcblxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTsqL1xuICAgICAgICB9LCB0aGlzKTtcblxuICAgICAgICB0aGlzLm1lbnVfYzEub24oJ3RvdWNoc3RhcnQnLCBmdW5jdGlvbiAoIGV2ZW50ICkge1xuICAgICAgICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKCdDMScpO1xuICAgICAgICB9LCB0aGlzKTtcblxuXG4gICAgICAgIHRoaXMuYnRuX21lbnUub24oJ3RvdWNoc3RhcnQnLCBmdW5jdGlvbiAoIGV2ZW50ICkge1xuICAgICAgICAgICAgdGhpcy5wYW5lbC5hY3RpdmUgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5wYW5lbF9jb250LmNoaWxkcmVuWzBdLmFjdGl2ZSA9IHRydWU7XG4gICAgICAgIH0sIHRoaXMpO1xuXG4gICAgICAgIHRoaXMucGFuZWxfY2xvc2Uub24oJ3RvdWNoc3RhcnQnLCBmdW5jdGlvbiAoIGV2ZW50ICkge1xuICAgICAgICAgICAgdGhpcy5wYW5lbC5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMucGFuZWxfY29udC5jaGlsZHJlblswXS5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMucGFuZWxfY29udC5jaGlsZHJlblsxXS5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgfSwgdGhpcyk7XG5cbiAgICAgICAgdGhpcy5wYW5lbF9jb250Lm9uKCd0b3VjaHN0YXJ0JywgZnVuY3Rpb24gKCBldmVudCApIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSwgdGhpcyk7XG5cblxuICAgICAgICBpZih0eXBlb2Yod3gpICE9IFwidW5kZWZpbmVkXCIpIHtcblxuICAgICAgICAgICAgdGhpcy5idG5faW5mby5vbigndG91Y2hzdGFydCcsIGZ1bmN0aW9uICggZXZlbnQgKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYW5lbC5hY3RpdmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRoaXMucGFuZWxfY29udC5jaGlsZHJlblsxXS5hY3RpdmUgPSB0cnVlO1xuXG4gICAgICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHNlbGYuZGF0YSA9IHtcbiAgICAgICAgICAgICAgICAgICAgJ3R5cGUnOiAnbm90aWNlJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB3eC5yZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly91cmwvJyxcbiAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHNlbGYuZGF0YSwgICAgLy/lj4LmlbDkuLrplK7lgLzlr7nlrZfnrKbkuLJcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+iuvue9ruWPguaVsOWGheWuueexu+Wei+S4ungtd3d3LWZvcm0tdXJsZW5jb2RlZFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6J2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuaW5mb19tc2cuc3RyaW5nID0gcmVzLmRhdGFbMF0ubXNnO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAocmVzKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdmJyxyZXMpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sIHRoaXMpO1xuXG4gICAgICAgICAgICB0aGlzLmJ0bl9zaGFyZS5vbigndG91Y2hzdGFydCcsIGZ1bmN0aW9uICggZXZlbnQgKSB7XG4gICAgICAgICAgICAgICAgd3guc2hhcmVBcHBNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICfmja7or7TmnInnpZ7np5jlmInlrr7vvIzlv6vmnaXnnIvnnIvlkKd+JyxcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2VVcmw6IFwicmVzL3Jhdy1hc3NldHMvVGV4dHVyZS9zaGFyZS9kb2xvX3NoYXJlLnBuZ1wiLFxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHd4LnNob3dUb2FzdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5oGt5Zac5L2g6Kem5Y+R5b2p6JuL77ya56We56eY5ZiJ5a6+RG9sb34nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uOiAnc3VjY2VzcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNjLmRpcmVjdG9yLmxvYWRTY2VuZSgnRG9sbycpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LCB0aGlzKTtcblxuICAgICAgICAgICAgdmFyIGlzX3Nob3cgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5idG5fdGFua2Uub24oJ3RvdWNoc3RhcnQnLCBmdW5jdGlvbiAoIGV2ZW50ICkge1xuICAgICAgICAgICAgICAgIGlmKGlzX3Nob3cpIHtcbiAgICAgICAgICAgICAgICAgICAgd3guc2hvd1RvYXN0KHtcbiAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ+W5v+WRiuW9qeibi+KApuKApicsXG4gICAgICAgICAgICAgICAgICAgICAgaWNvbjogJ3N1Y2Nlc3MnLFxuICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXHRcdFx0XHRcdHRoaXMuYmFubmVyQWQuc2hvdygpO1xuXHRcdFx0XHRcdGlzX3Nob3cgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuXHRcdFx0XHRcdHRoaXMuYmFubmVyQWQuaGlkZSgpO1xuXHRcdFx0XHRcdGlzX3Nob3cgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cblxuXHQgICAgICAgIH0sIHRoaXMpO1xuXG4gICAgICAgICAgICB0aGlzLmJ0bl94aWFuLm9uKCd0b3VjaHN0YXJ0JywgZnVuY3Rpb24gKCBldmVudCApIHtcbiAgICAgICAgICAgICAgICB3eC5wcmV2aWV3SW1hZ2Uoe1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50OiBcImh0dHA6Ly91cmwvZ2V0MTAuanBnXCIsXG4gICAgICAgICAgICAgICAgICAgIHVybHM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaHR0cDovL3VybC9nZXQxMC5qcGdcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaHR0cDovL3VybC94aWFuLmpwZ1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJodHRwOi8vdXJsL3RhbmtlLmpwZ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSwgdGhpcyk7XG5cbiAgICAgICAgICAgIGlmKHd4LmNyZWF0ZUdhbWVDbHViQnV0dG9uKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJ1dHRvbiA9IHd4LmNyZWF0ZUdhbWVDbHViQnV0dG9uKHtcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogJ3doaXRlJyxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IDEwLFxuICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiAxMixcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAzMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogMzBcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8qaWYod3guY3JlYXRlVXNlckluZm9CdXR0b24pIHtcbiAgICAgICAgICAgICAgICB2YXIgYnV0dG9uID0gd3guY3JlYXRlVXNlckluZm9CdXR0b24oe1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAndGV4dCcsXG4gICAgICAgICAgICAgICAgICAgIHRleHQ6ICfnmbvlvZUnLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogMTAsXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDc2LFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiA0MCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmZmZmZmYnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjMDAwMDAwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTYsXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6IDRcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgYnV0dG9uLm9uVGFwKGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJ0YXBcIixyZXMpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9Ki9cbiAgICAgICAgfVxuXG4gICAgfSxcblxuICAgIC8vIGNhbGxlZCBldmVyeSBmcmFtZSwgdW5jb21tZW50IHRoaXMgZnVuY3Rpb24gdG8gYWN0aXZhdGUgdXBkYXRlIGNhbGxiYWNrXG4gICAgdXBkYXRlOiBmdW5jdGlvbiAoZHQpIHtcblxuICAgIH0sXG59KTtcbiJdfQ==